<?php 
/**
 * ZF2 Buch Kapitel 22
 * 
 * Das Buch "Zend Framework 2 - Das Praxisbuch"
 * von Ralf Eggert ist im Galileo-Computing Verlag erschienen. 
 * ISBN 978-3-8362-2610-3
 * 
 * @package    Application
 * @author     Ralf Eggert <r.eggert@travello.de>
 * @copyright  Alle Listings sind urheberrechtlich geschÃ¼tzt!
 * @link       http://www.zendframeworkbuch.de/ und http://www.galileocomputing.de/3460
 */

/**
 * Listing 22.7 view script
 * 
 * @package    Application
 */

$this->headTitle('Listing 22.7');
$this->pageTitle('Listing 22.7');
?>
<h3>Besonderheiten im <code>OrderService</code></h3>
<pre>
&lt;?php
namespace Shop\Service;

[...]

class OrderService implements EventManagerAwareInterface
{
    [...]
        
    protected $basketService = null;
    protected $identity = null;
    
    [...]
        
    public function __construct(
        OrderTable $orderTable, BasketServiceInterface $basket, UserEntity $identity = null
    )
    {
        $this->setTable($orderTable, 'order');
        $this->setBasketService($basket);
        $this->setIdentity($identity);
    }
    
    [...]
        
    public function addIdentity($order)
    {
        if (!$order) {
            return false;
        }
        
        $order->setIdentity(
            $this->getTable('user')->fetchSingleById($order->getUserId())
        );
        
        return $order;
    }
    
    public function fetchSingleById($id)
    {
        $order = $this->getTable('order')->fetchSingleById($id);
        $order = $this->addIdentity($order);
        return $order;
    }
    
    public function fetchList($page = 1, $perPage = 4, $params = array())
    {
        $select = $this->getTable('order')->getSql()->select();
        $select->columns(array('id'));
        $select->order('cdate DESC');
        
        foreach ($params as $param => $value) {
            $select->where->equalTo($param, $value);
        }
        
        $adapter = new DbSelect(
            $select, 
            $this->getTable('order')->getAdapter()
        );
        $paginator = new Paginator($adapter);
        $paginator->setCurrentPageNumber($page);
        $paginator->setItemCountPerPage($perPage);
        $paginator->setPageRange(9);
        
        return $paginator;
    }
    
    public function save(array $data, $id = null)
    {
        [...]
        
        $order->exchangeArray($form->getData());
        
        // set values
        if ($mode == 'create') {
            $order->setCdate(date('Y-m-d H:i:s'));
            $order->setStatus('new');
            $order->setPositions($this->getBasketService()->getBasket());
            $order->setUserId($this->getIdentity()->getId());
        }
        
        // get hydrator
        $hydrator = $this->getTable('order')->getResultSetPrototype()->getHydrator();
        
        // get insert data
        $saveData = $hydrator->extract($order);
        
        [...]
    }

    [...]
}
</pre>
